package datamanagement;

public class StudentUnitRecord implements IStudentUnitRecord 
{
	private Integer sid; // Declare sid as integer
	private String uc;  // Declare uc as string
	private float a1, a2, ex;  // Declare three variables a1,a2,ex as flaot

public StudentUnitRecord(Integer id, String code, float asg1, float asg2,float exam)
{
		this.sid = id;
		this.uc = code;
		this.setAsg1(asg1);
		this.setAsg2(asg2);
		this.setExam(exam);
	}

	public Integer getStudentID() 
	{
		return sid; // REturns sid as output
	}

	public String getUnitCode() 
	{
		return uc; //Returns uc as output
	}

	public void setAsg1(float a1)
	{
		if (a1 < 0 ||
			a1 > UnitManager.UM().getUnit(uc).getAsg1Weight())
		{
			throw new RuntimeException("Mark cannot be less than zero or greater than assessment weight");
		}
		this.a1 = a1;
	}

	public float getAsg1()
	{

		return a1;  // REturns a1 as output
	}

	public void setAsg2(float a2) 
	{
		if (a2 < 0 ||a2 > UnitManager.UM().getUnit(uc).getAsg2Weight()) 
		{
			throw new RuntimeException("Mark cannot be less than zero or greater than assessment weight");
		}
		this.a2 = a2;

	}

	public float getAsg2() 
	{
		return a2; // Returns a2 as output
	}

	public void setExam(float ex) 
	{
		if (ex < 0 ||ex > UnitManager.UM().getUnit(uc).getExamWeight()) 
		{
				throw new RuntimeException("Mark cannot be less than zero or greater than assessment weight");
			}
		this.ex = ex;
	}

	public float getExam() 
	{
		return ex; // Returns ex as output
	}

	public float getTotal()
	{
		return a1 + a2 + ex; // REturns sum of a1, a2 and ex as output

	}
}
